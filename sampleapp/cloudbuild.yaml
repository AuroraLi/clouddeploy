# Copyright 2018 Google LLC
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     https://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

  ### Build
  
    - id: 'build'
      name: 'gcr.io/cloud-builders/docker'
      entrypoint: 'bash'
      args: 
        - '-c'
        - |
            docker build -t ${LOCATION}-docker.pkg.dev/${PROJECT_ID}/video-process/mysampleapp:${SHORT_SHA} ./example
  
  
  ### Test
  
  
  ### Publish
    - id: 'publish'
      name: 'gcr.io/cloud-builders/docker'
      entrypoint: 'bash'
      args: 
        - '-c'
        - |
            docker push ${LOCATION}-docker.pkg.dev/${PROJECT_ID}/video-process/mysampleapp:${SHORT_SHA}
  
  
  
  ### Deploy
    - id: 'deploy'
      name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
      entrypoint: gcloud
      args: ['deploy', 'releases', 'create', 'deploy-${SHORT_SHA}', '--delivery-pipeline', 'deploy-pipeline', '--region', '${LOCATION}', '--project', '${PROJECT_ID}', '--images','my-app-image=${LOCATION}-docker.pkg.dev/${PROJECT_ID}/video-process/mysampleapp:${SHORT_SHA}']
      # env:
      #   - 'KUBECONFIG=/kube/config'
      # entrypoint: 'bash'
      # args:
      #   - '-c'
      #   - |
      #       PROJECT=$$(gcloud config get-value core/project)          
  
      #       gcloud container clusters get-credentials "${_CLUSTER}" \
      #         --project "$${PROJECT}" \
      #         --zone "${_ZONE}"  
  
  
      #       sed -i 's|gcr.io/$PROJECT_ID/$APP_NAME:.*|gcr.io/$PROJECT_ID/$APP_NAME:${SHORT_SHA}|' ./k8s/deployments/canary/*.yaml
            
      #       kubectl get ns production || kubectl create ns production
      #       kubectl apply --namespace production --recursive -f k8s/deployments/canary
      #       kubectl apply --namespace production --recursive -f k8s/services